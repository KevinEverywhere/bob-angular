!function(window,angular){"use strict";angular.module("localCRUD",[]).service("LocalCRUDService",["$rootScope",function($rootScope){var service={stringToXML:function(text){if(window.ActiveXObject){var doc=new ActiveXObject("Microsoft.XMLDOM");doc.async="false",doc.loadXML(text)}else var parser=new DOMParser,doc=parser.parseFromString(text,"text/xml");return doc},xmlToString:function(xml){try{var oSerializer=new XMLSerializer,sXML=oSerializer.serializeToString(xml);return sXML}catch(oops){return xml}},_canStore:0,_testLocalStorage:function(){try{return"localStorage"in window&&null!==window.localStorage}catch(e){return!1}},initStore:function(){this._canStore=this._testLocalStorage()?1:-1},manageLocalCRUD:function(whatAction,whatObj,hasFunc){if(this._canStore<0);else{var _whatObj={};switch(hasFunc?(_whatObj.key=whatObj.key,_whatObj.value=this[hasFunc](whatObj.value)):_whatObj=whatObj,whatAction){case"create":localStorage[_whatObj.key]?this._update(_whatObj):this._create(_whatObj);break;case"retrieve":return localStorage[whatObj]?hasFunc?this[hasFunc](this._retrieve(whatObj)):this._retrieve(whatObj):null;case"update":localStorage[_whatObj.key]?this._update(_whatObj):this._create(_whatObj);break;case"delete":localStorage[whatObj]&&this._delete(whatObj)}}},_create:function(what){localStorage[what.key]=what.value,$rootScope.$broadcast("localCRUD.create")},_retrieve:function(what){var retrieved;$rootScope.$broadcast("localCRUD.retrieve");try{retrieved=JSON.parse(localStorage[what])}catch(oops){retrieved=localStorage[what]}return retrieved},_update:function(what){localStorage[what.key]=what.value,$rootScope.$broadcast("localCRUD.update")},_delete:function(what){localStorage.removeItem(what),$rootScope.$broadcast("localCRUD.delete")}};return service.initStore(),service}]).controller("LocalCRUDCtrl",["$scope","LocalCRUDService",function($scope,LocalCRUDService){var _isNull=!LocalCRUDService.manageLocalCRUD("retrieve","crudStub");$rootScope.$on("localCRUD.create",function(){console.log("localCRUD.created")}),$rootScope.$on("localCRUD.retrieve",function(){console.log("localCRUD.retrieved")}),$rootScope.$on("localCRUD.update",function(){console.log("localCRUD.updated")}),$rootScope.$on("localCRUD.delete",function(){console.log("localCRUD.deleted")}),_isNull&&LocalCRUDService.manageLocalCRUD("create",{key:"crudStub",value:{toString:"Base CRUD Object"}}),$scope.crudStub=LocalCRUDService.manageLocalCRUD("retrieve","crudStub")}])}(window,window.angular);